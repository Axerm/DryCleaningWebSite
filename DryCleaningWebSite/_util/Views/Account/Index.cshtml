@using Microsoft.AspNetCore.Identity
@inject UserManager<Employee> _userManager

@model PaginatedList<Employee>
@{
    ViewData["Title"] = "Аккаунты сотрудников";

    string IndexHelperSortByRole(Employee e)
    {
        var roles = _userManager.GetRolesAsync(e);
        if (roles.Result.Count <= 0)
            return "";
        else
            return roles.Result[0];
    }
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Поиск:</label> <input type="text" autocomplete="off" name="SearchString" value="@ViewData["SortAccountsFilter"]" />
            <input type="submit" value="Найти" class="btn btn-outline-light" /> |
            <a asp-action="Index">Вернуться к полному списку</a>
        </p>
    </div>
</form>

<table class="table table-dark table-striped table-hover">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortAccountsUserName"]" asp-route-currentFilter="@ViewData["SortAccountsFilter"]">Логин</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortAccountsFullName"]" asp-route-currentFilter="@ViewData["SortAccountsFilter"]">Полное имя</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortAccountsRole"]" asp-route-currentFilter="@ViewData["SortAccountsFilter"]">Роль</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortAccountsFilial"]" asp-route-currentFilter="@ViewData["SortAccountsFilter"]">Филиал</a>
            </th>

            <th>
                <a>Действия над заказами</a>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <label>@item.UserName</label>
                </td>
                <td>
                    <label>@($"{item.FamilyName} {item.Name} {item.FatherName}")</label>
                </td>
                <td>
                    <label>@IndexHelperSortByRole(item)</label>
                </td>
                <td>
                    <label>@item.Filial?.Name</label>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Просмотреть/редактировать</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var firstDisabled = !Model.HasFirst ? "disabled" : "";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var lastDisabled = !Model.HasLast ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["SortAccountsCurrentSort"]"
   asp-route-pageNumber="1"
   asp-route-currentFilter="@ViewData["SortAccountsFilter"]"
   class="btn btn-outline-light @firstDisabled">
    В начало
</a>

@if (Model.HasFirst)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["SortAccountsCurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["SortAccountsFilter"]"
       class="btn btn-outline-light @prevDisabled">
        @(Model.PageIndex - 1)
    </a>
}

<a asp-action="Index"
   class="btn btn-outline-light disabled">
    @(Model.PageIndex)
</a>

@if (Model.HasLast)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["SortAccountsCurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["SortAccountsFilter"]"
       class="btn btn-outline-light @nextDisabled">

        @(Model.PageIndex + 1)
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["SortAccountsCurrentSort"]"
   asp-route-pageNumber="@Model.TotalPages"
   asp-route-currentFilter="@ViewData["SortAccountsFilter"]"
   class="btn btn-outline-light @lastDisabled">
    В конец
</a>