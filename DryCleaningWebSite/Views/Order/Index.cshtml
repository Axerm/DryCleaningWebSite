@model PaginatedList<Order>
@{
    ViewData["Title"] = "Зарегистрированные наряд-заказы";
}

<div class="col-12 blur-background p-4">
    <form asp-action="Index" method="get" class="row col-12 align-items-center p-0 m-0 mb-3">

        @if (String.IsNullOrEmpty(ViewData["SortOrdersFilter"] as string))
        {
            <div class="col-10 pr-1 p-0 m-0">
                <input type="text" autocomplete="off" name="SearchString" placeholder="Поиск..." value="@ViewData["SortOrdersFilter"]" />
            </div>
            <div class="col-2 p-0 m-0">
                <input type="submit" value="Найти" class="btn btn-dark"/>
            </div>
        }
        else
        {
            <div class="col-6 col-sm-6 col-md-7 pr-2 p-0 m-0">
                <input type="text" autocomplete="off" name="SearchString" placeholder="Поиск..." value="@ViewData["SortOrdersFilter"]" />
            </div>
            <div class="col-2 col-sm-2 col-md-2 pr-2 p-0 m-0">
                <input type="submit" value="Найти" class="btn btn-dark"/>
            </div>
            <div class="col-4 col-sm-4 col-md-3 p-0 m-0">
                <a asp-action="Index" class="btn btn-dark like-submit">Отменить поиск</a>
            </div>
        }
    </form>

    <table class="table table-light table-striped table-hover">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrdersId"]" asp-route-currentFilter="@ViewData["SortOrdersFilter"]">№</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrdersFilial"]" asp-route-currentFilter="@ViewData["SortOrdersFilter"]">Филиал</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrdersDateOfReceipt"]" asp-route-currentFilter="@ViewData["SortOrdersFilter"]">Дата приёма</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrdersDateOfPlainIssue"]" asp-route-currentFilter="@ViewData["SortOrdersFilter"]">Дата выдачи</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrdersDateOfAffectedPlainIssue"]" asp-route-currentFilter="@ViewData["SortOrdersFilter"]">Выдача перенесена</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrdersStatusOrder"]" asp-route-currentFilter="@ViewData["SortOrdersFilter"]">Статус</a>
                </th>
                <th>
                    <a>Действия над заказами</a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <label>@item.Id</label>
                    </td>
                    <td>
                        <label>@item?.Filial?.Name</label>
                    </td>
                    <td>
                        <label>@item.DateOfReceipt.ToString("dd.MM.yyy")</label>
                    </td>
                    <td>
                        <label>@item.DateOfPlainIssue.ToString("dd.MM.yyy")</label>
                    </td>
                    <td>
                        <label>@item?.DateOfAffectedPlainIssue?.ToString("dd.MM.yyy")</label>
                    </td>
                    <td>
                        <label>@item?.StatusOrder?.Name</label>
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Просмотреть</a> |
                        <a asp-action="AdditionalInfo" asp-route-id="@item.Id">Редактировать</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var firstDisabled = !Model.HasFirst ? "disabled" : "";
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        var lastDisabled = !Model.HasLast ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["SortOrderCurrentSort"]"
       asp-route-pageNumber="1"
       asp-route-currentFilter="@ViewData["SortOrdersFilter"]"
       class="btn btn-outline-dark @firstDisabled">
        В начало
    </a>

    @if (Model.HasFirst)
    {
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["SortOrderCurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["SortOrdersFilter"]"
           class="btn btn-outline-dark @prevDisabled">
            @(Model.PageIndex - 1)
        </a>
    }

    <a asp-action="Index"
       class="btn btn-outline-dark disabled">
        @(Model.PageIndex)
    </a>

    @if (Model.HasLast)
    {
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["SortOrderCurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["SortOrdersFilter"]"
           class="btn btn-outline-dark @nextDisabled">

            @(Model.PageIndex + 1)
        </a>
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["SortOrderCurrentSort"]"
       asp-route-pageNumber="@Model.TotalPages"
       asp-route-currentFilter="@ViewData["SortOrdersFilter"]"
       class="btn btn-outline-dark @lastDisabled">
        В конец
    </a>
</div>